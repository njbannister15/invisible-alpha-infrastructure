
AWSTemplateFormatVersion: '2010-09-09'
Description: A template to create VPC's in US only regions, with 2 publics subnets per az, and 2 private subnets peraz
Parameters:
  CidrBlock:
    Type: String
    Default: 10.0.0.0/16
    AllowedValues:
      - 10.0.0.0/16
  SubnetName:
    Type: String
    Default: Dev
    AllowedValues:
      - Dev
      - Prod
      - Stage
      - Test
      - Demo
  ManagingEngineer:
    Type: String
  ManagingDepartment:
    Type: String
  CreatePrivateSubnet:
    Type: String
    Default: "TRUE"
    AllowedValues:
      - "TRUE"
      - "FALSE"

Conditions:
  CreatePrivateSubnet: !Equals [!Ref CreatePrivateSubnet, "TRUE"]
    
Mappings:  
  CidrMap:
    Dev:
      pubcidr1: 10.0.0.0/24
      pubcidr2: 10.0.1.0/24
      pubcidr3: 10.0.2.0/24
      privcidr1: 10.0.3.0/24
      privcidr2: 10.0.4.0/24
      privcidr3: 10.0.5.0/24
    Prod:
      pubcidr1: 10.0.6.0/24
      pubcidr2: 10.0.7.0/24
      pubcidr3: 10.0.8.0/24    
      privcidr1: 10.0.9.0/24
      privcidr2: 10.0.10.0/24
      privcidr3: 10.0.11.0/24
    Stage:    
      pubcidr1: 10.0.12.0/24
      pubcidr2: 10.0.13.0/24
      pubcidr3: 10.0.14.0/24    
      privcidr1: 10.0.15.0/24
      privcidr2: 10.0.16.0/24
      privcidr3: 10.0.17.0/24
    Test:    
      pubcidr1: 10.0.18.0/24
      pubcidr2: 10.0.19.0/24
      pubcidr3: 10.0.20.0/24    
      privcidr1: 10.0.21.0/24
      privcidr2: 10.0.22.0/24
      privcidr3: 10.0.23.0/24
    Demo:    
      pubcidr1: 10.0.24.0/24
      pubcidr2: 10.0.25.0/24
      pubcidr3: 10.0.26.0/24    
      privcidr1: 10.0.27.0/24
      privcidr2: 10.0.28.0/24
      privcidr3: 10.0.29.0/24

Resources:  
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Join ['-', [ !Ref SubnetName, 'VPC']]
        - Key: Managing-Engineer
          Value: !Ref ManagingEngineer
        - Key: Managing-Department
          Value: !Ref ManagingDepartment

##################################### PUBLIC SUBNETS #####################################
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Join ['', [!Ref 'AWS::Region', 'a'] ]
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrMap, !Ref SubnetName, pubcidr1] 
      Tags:
        - Key: Name
          Value: !Join [ '-', ['pub1', !Ref SubnetName]]
        - Key: Managing-Engineer
          Value: !Ref ManagingEngineer
        - Key: Managing-Department
          Value: !Ref ManagingDepartment
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Join ['', [!Ref 'AWS::Region', 'b' ]]
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrMap, !Ref SubnetName, pubcidr2] 
      MapPublicIpOnLaunch : true
      Tags:
        - Key: Name
          Value: !Join [ '-', ['pub2', !Ref SubnetName]]
        - Key: Managing-Engineer
          Value: !Ref ManagingEngineer
        - Key: Managing-Department
          Value: !Ref ManagingDepartment
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Join ['', [!Ref 'AWS::Region', 'c' ]]
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrMap, !Ref SubnetName, pubcidr3] 
      MapPublicIpOnLaunch : true
      Tags:
        - Key: Name
          Value: !Join [ '-', ['pub3', !Ref SubnetName]]
        - Key: Managing-Engineer
          Value: !Ref ManagingEngineer
        - Key: Managing-Department
          Value: !Ref ManagingDepartment

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:  
      Tags:
        - Key: Name
          Value: !Join [ '-', [!Ref SubnetName, 'igw']]
        - Key: Managing-Engineer
          Value: !Ref ManagingEngineer
        - Key: Managing-Department
          Value: !Ref ManagingDepartment
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join [ '-', [!Ref SubnetName, 'PublicRouteTable']]
        - Key: Managing-Engineer
          Value: !Ref ManagingEngineer
        - Key: Managing-Department
          Value: !Ref ManagingDepartment
  InternetGatewayRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0      
      GatewayId: !Ref InternetGateway      
      RouteTableId: !Ref PublicRouteTable
      

  SubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  SubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
  SubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet3

##################################### PRIVATE SUBNETS #####################################

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Condition : CreatePrivateSubnet
    Properties:
      AvailabilityZone: !Join ['', [!Ref 'AWS::Region', 'a'] ]
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrMap, !Ref SubnetName, privcidr1] 
      Tags:
        - Key: Name
          Value: !Join [ '-', ['priv1', !Ref SubnetName]]
        - Key: Managing-Engineer
          Value: !Ref ManagingEngineer
        - Key: Managing-Department
          Value: !Ref ManagingDepartment
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Condition : CreatePrivateSubnet
    Properties:
      AvailabilityZone: !Join ['', [!Ref 'AWS::Region', 'b' ]]
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrMap, !Ref SubnetName, privcidr2] 
      MapPublicIpOnLaunch : true
      Tags:
        - Key: Name
          Value: !Join [ '-', ['priv2', !Ref SubnetName]]
        - Key: Managing-Engineer
          Value: !Ref ManagingEngineer
        - Key: Managing-Department
          Value: !Ref ManagingDepartment
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Condition : CreatePrivateSubnet
    Properties:
      AvailabilityZone: !Join ['', [!Ref 'AWS::Region', 'c' ]]
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrMap, !Ref SubnetName, privcidr3] 
      MapPublicIpOnLaunch : true
      Tags:
        - Key: Name
          Value: !Join [ '-', ['priv3', !Ref SubnetName]]
        - Key: Managing-Engineer
          Value: !Ref ManagingEngineer
        - Key: Managing-Department
          Value: !Ref ManagingDepartment

  NatGatewayEIP1:
    Type: AWS::EC2::EIP
    Condition : CreatePrivateSubnet
    Properties:
      Domain: vpc
  NatGatewayEIP2:
    Type: AWS::EC2::EIP
    Condition : CreatePrivateSubnet
    Properties:
      Domain: vpc
  NatGatewayEIP3:
    Type: AWS::EC2::EIP
    Condition : CreatePrivateSubnet
    Properties:
      Domain: vpc

  PrivateNatGateway1:
    Type: AWS::EC2::NatGateway
    Condition : CreatePrivateSubnet
    Properties: 
      AllocationId: !GetAtt NatGatewayEIP1.AllocationId
      SubnetId: !Ref PrivateSubnet1
      Tags:
        - Key: Name
          Value: !Join [ '-', ['NatGateway1', !Ref SubnetName]]
        - Key: Managing-Engineer
          Value: !Ref ManagingEngineer
        - Key: Managing-Department
          Value: !Ref ManagingDepartment
  PrivateNatGateway2:
    Type: AWS::EC2::NatGateway
    Condition : CreatePrivateSubnet
    Properties: 
      AllocationId: !GetAtt NatGatewayEIP2.AllocationId
      SubnetId: !Ref PrivateSubnet2
      Tags:
        - Key: Name
          Value: !Join [ '-', ['NatGateway2', !Ref SubnetName]]
        - Key: Managing-Engineer
          Value: !Ref ManagingEngineer
        - Key: Managing-Department
          Value: !Ref ManagingDepartment
  PrivateNatGateway3:
    Type: AWS::EC2::NatGateway
    Condition : CreatePrivateSubnet
    Properties: 
      AllocationId: !GetAtt NatGatewayEIP3.AllocationId
      SubnetId: !Ref PrivateSubnet3
      Tags:
        - Key: Name
          Value: !Join [ '-', ['NatGateway3', !Ref SubnetName]]
        - Key: Managing-Engineer
          Value: !Ref ManagingEngineer
        - Key: Managing-Department
          Value: !Ref ManagingDepartment

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Condition : CreatePrivateSubnet
    Properties: 
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join [ '-', ['PrivateRouteTable1', !Ref SubnetName]]
        - Key: Managing-Engineer
          Value: !Ref ManagingEngineer
        - Key: Managing-Department
          Value: !Ref ManagingDepartment
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Condition : CreatePrivateSubnet
    Properties: 
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join [ '-', ['PrivateRouteTable2', !Ref SubnetName]]
        - Key: Managing-Engineer
          Value: !Ref ManagingEngineer
        - Key: Managing-Department
          Value: !Ref ManagingDepartment
  PrivateRouteTable3:
    Type: AWS::EC2::RouteTable
    Condition : CreatePrivateSubnet
    Properties: 
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join [ '-', ['PrivateRouteTable3', !Ref SubnetName]]
        - Key: Managing-Engineer
          Value: !Ref ManagingEngineer
        - Key: Managing-Department
          Value: !Ref ManagingDepartment

  PrivateRoute1:
    Type: AWS::EC2::Route
    Condition : CreatePrivateSubnet
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0           
      NatGatewayId: !Ref PrivateNatGateway1  
      RouteTableId: !Ref PrivateRouteTable1
  PrivateRoute2:
    Type: AWS::EC2::Route
    Condition : CreatePrivateSubnet
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0           
      NatGatewayId: !Ref PrivateNatGateway2
      RouteTableId: !Ref PrivateRouteTable2
  PrivateRoute3:
    Type: AWS::EC2::Route
    Condition : CreatePrivateSubnet
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0           
      NatGatewayId: !Ref PrivateNatGateway3
      RouteTableId: !Ref PrivateRouteTable3